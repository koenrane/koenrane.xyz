#!/bin/sh
set -e

function cleanup {
    local exit_code=$?
    
    # Ensure cleanup runs even if script fails
    set +e
    
    if [ $(git status --porcelain | wc -l) -gt 0 ]; then
        echo "Committing changes..."
        git add -A
        git commit -m "Uploaded assets to r2 and updated references." || true
    fi

    PUSHED_CHANGES=$1
    if [[ $PUSHED_CHANGES -eq 1 ]]; then
        echo "Restoring stashed changes..."
        git stash pop >>/dev/null || true
    fi

    # Restore original exit code
    return $exit_code
}

# If there are any changes, stash them and return 1, otherwise return 0.
function maybe_stash {
    PREV_NUM_STASHES=$(git stash list | wc -l)
    git stash push --include-untracked >>/dev/null
    # Check if anything was stashed
    if [ "$(git stash list | wc -l)" -gt "$PREV_NUM_STASHES" ]; then
        echo "1"
    else
        echo "0"
    fi
}

CURRENT_BRANCH=$(git symbolic-ref --short head)

if [[ $CURRENT_BRANCH != "main" ]]; then
	exit 0
fi

GIT_ROOT=$(git rev-parse --show-toplevel)
cd "$GIT_ROOT"

PUSHED_CHANGES=$(maybe_stash)
trap 'cleanup $PUSHED_CHANGES' EXIT

# Run all checks with progress bars
python "$GIT_ROOT/scripts/run_push_checks.py" --resume

git stash -m "Temporary push stash"
git push --no-verify
git stash pop

exit 0
