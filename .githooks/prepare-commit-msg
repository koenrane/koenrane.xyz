#!/bin/sh

# Exit if the `SKIP_LLM_GITHOOK` environment variable is set
if [ ! -z "$SKIP_LLM_GITHOOK" ]; then
  exit 0
fi

# ANSI color codes for styling the output
RED='\033[0;31m'    # Sets text to red
GREEN='\033[0;32m'  # Sets text to green
YELLOW='\033[0;33m' # Sets text to yellow
BLUE='\033[0;34m'   # Sets text to blue
NC='\033[0m'        # Resets the text color to default, no color

# Cleanup function to ensure proper termination
cleanup() {
    # Kill the spinner if it's running
    if [ ! -z "$spin_pid" ]; then
        kill $spin_pid 2>/dev/null
        wait $spin_pid 2>/dev/null
    fi
    
    # Reset terminal
    tput cnorm  # Show cursor
    echo  # New line
    
    # Exit
    exit 1
}

# Set up trap for various termination signals
trap cleanup INT TERM HUP

# Function to display a spinning animation during the LLM processing
spin_animation() {
  # Array of spinner characters for the animation
  spinner=("⠋" "⠙" "⠹" "⠸" "⠼" "⠴" "⠦" "⠧" "⠇" "⠏")
  # Infinite loop to keep the animation running
  while true; do
    for i in "${spinner[@]}"; do
      tput civis  # Hide the cursor
      tput el1    # Clear line
      printf "\\r${YELLOW}%s${NC} Generating LLM commit message..." "$i"
      sleep 0.1
      tput cub 32
    done
  done
}

# Check if it's a merge commit
if [ -n "$2" ]; then
  exit 0
fi

# Check if llm is installed
if ! command -v llm &> /dev/null; then
  echo "${RED}Error: 'llm' command is not installed. Please install it and try again.${NC}"
  exit 1
fi

# Start spinner
spin_animation &
spin_pid=$!

# Generate commit message
if ! commit_msg=$(git diff --cached | llm -s "$(cat ~/.config/prompts/commit-system-prompt.txt)" 2>&1); then
  cleanup
  printf "${RED}Error: 'llm' command failed to generate the commit message:\\n${commit_msg}${NC}\\n\\nManually set the commit message"
  exit 1
fi

# Clean up spinner
kill $spin_pid
wait $spin_pid 2>/dev/null
tput cnorm  # Show cursor
echo

# Display the generated commit message
echo "${BLUE}=== Generated Commit Message ===${NC}"
echo "${GREEN}$commit_msg${NC}"
echo "${BLUE}=================================${NC}"
echo

# Write the commit message
echo "$commit_msg" > "$1"
